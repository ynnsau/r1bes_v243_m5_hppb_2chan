--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CBX_SINGLE_OUTPUT_FILE="OFF" DEVICE_FAMILY="Agilex 7" DISABLE_DCFIFO_EMBEDDED_TIMING_CONSTRAINT="TRUE" ENABLE_ECC="FALSE" LPM_NUMWORDS=64 LPM_SHOWAHEAD="ON" LPM_WIDTH=640 LPM_WIDTH_R=640 LPM_WIDTHU=6 LPM_WIDTHU_R=6 OVERFLOW_CHECKING="OFF" RDSYNC_DELAYPIPE=4 READ_ACLR_SYNCH="ON" UNDERFLOW_CHECKING="OFF" USE_EAB="ON" WRITE_ACLR_SYNCH="ON" WRSYNC_DELAYPIPE=4 aclr data q rdclk rdempty rdreq wrclk wrempty wrfull wrreq wrusedw ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Agilex 7" LOW_POWER_MODE="NONE" lpm_hint="DISABLE_DCFIFO_EMBEDDED_TIMING_CONSTRAINT=TRUE" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 24.3 cbx_a_gray2bin 2024:10:24:10:32:27:SC cbx_a_graycounter 2024:10:24:10:32:27:SC cbx_altdpram 2024:10:24:10:32:27:SC cbx_altera_counter 2024:10:24:10:32:27:SC cbx_altera_gray_counter 2024:10:24:10:32:27:SC cbx_altera_syncram 2024:10:24:10:32:27:SC cbx_altera_syncram_ltm 2024:10:24:10:32:27:SC cbx_altera_syncram_nd_impl 2024:10:24:10:32:27:SC cbx_altsyncram 2024:10:24:10:32:27:SC cbx_dcfifo 2024:10:24:10:32:27:SC cbx_fifo_common 2024:10:24:10:32:27:SC cbx_libertymesa 2024:10:24:10:32:27:SC cbx_lpm_add_sub 2024:10:24:10:32:27:SC cbx_lpm_compare 2024:10:24:10:32:27:SC cbx_lpm_counter 2024:10:24:10:32:27:SC cbx_lpm_decode 2024:10:24:10:32:27:SC cbx_lpm_mux 2024:10:24:10:32:27:SC cbx_mgl 2024:10:24:10:32:30:SC cbx_nadder 2024:10:24:10:32:27:SC cbx_scfifo 2024:10:24:10:32:27:SC cbx_stratix 2024:10:24:10:32:27:SC cbx_stratixii 2024:10:24:10:32:27:SC cbx_stratixiii 2024:10:24:10:32:27:SC cbx_stratixv 2024:10:24:10:32:27:SC cbx_util_mgl 2024:10:24:10:32:27:SC  VERSION_END


-- Copyright (C) 2024  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the Intel FPGA Software License Subscription Agreements 
--  on the Quartus Prime software download page.


FUNCTION a_gray2bin_8hch (gray[6..0])
RETURNS ( bin[6..0]);
FUNCTION altera_gray_counter (clk, enable, reset)
WITH ( PVALUE, WIDTH = 6)
RETURNS ( q[WIDTH-1..0]);
FUNCTION altera_syncram_e6au (aclr1, address_a[5..0], address_b[5..0], addressstall_b, clock0, clock1, data_a[639..0], wren_a)
RETURNS ( q_b[639..0]);
FUNCTION dffpipe_rhoj (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION alt_synch_pipe_an8a (clock, clrn, d[6..0])
RETURNS ( q[6..0]);
FUNCTION dffpipe_8sfh (clock, clrn, d[6..0])
RETURNS ( q[6..0]);
FUNCTION cmpr_e302 (dataa[6..0], datab[6..0])
RETURNS ( aeb);

--synthesis_resources = altera_gray_counter 2 lut 8 ram_bits (AUTO) 40960 reg 25 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;suppress_da_rule_internal=R105;{-to wrptr_g1p} suppress_da_rule_internal=S102;{-to wrptr_g} suppress_da_rule_internal=S102;{-to wrptr_g} POWER_UP_LEVEL=LOW";

SUBDESIGN dcfifo_lks21
( 
	aclr	:	input;
	data[639..0]	:	input;
	q[639..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrempty	:	output;
	wrfull	:	output;
	wrreq	:	input;
	wrusedw[5..0]	:	output;
) 
VARIABLE 
	wrptr_g_gray2bin : a_gray2bin_8hch;
	ws_dgrp_gray2bin : a_gray2bin_8hch;
	rdptr_g1p : altera_gray_counter
		WITH (
			PVALUE = 1,
			WIDTH = 7
		);
	wrptr_g1p : altera_gray_counter
		WITH (
			PVALUE = 1,
			WIDTH = 7
		);
	fifo_altera_syncram : altera_syncram_e6au;
	delayed_wrptr_g[6..0] : dffe;
	rdptr_g[6..0] : dffe;
	wrptr_g[6..0] : dffe
		WITH (
			power_up = "low"
		);
	rdaclr : dffpipe_rhoj;
	rs_dgwp : alt_synch_pipe_an8a;
	wraclr : dffpipe_rhoj;
	ws_brp : dffpipe_8sfh;
	ws_bwp : dffpipe_8sfh;
	ws_dgrp : alt_synch_pipe_an8a;
	wrusedw_sub_dataa[6..0]	:	WIRE;
	wrusedw_sub_datab[6..0]	:	WIRE;
	wrusedw_sub_result[6..0]	:	WIRE;
	rdempty_eq_comp : cmpr_e302;
	wrempty_eq_comp : cmpr_e302;
	wrfull_eq_comp : cmpr_e302;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[5..0]	: WIRE;
	ram_address_b[5..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_gs[6..0]	: WIRE;

BEGIN 
	wrptr_g_gray2bin.gray[6..0] = wrptr_g[6..0].q;
	ws_dgrp_gray2bin.gray[6..0] = ws_dgrp.q[6..0];
	rdptr_g1p.clk = rdclk;
	rdptr_g1p.enable = valid_rdreq;
	rdptr_g1p.reset = (! rdaclr.q[]);
	wrptr_g1p.clk = wrclk;
	wrptr_g1p.enable = valid_wrreq;
	wrptr_g1p.reset = (! wraclr.q[]);
	fifo_altera_syncram.aclr1 = (! rdaclr.q[]);
	fifo_altera_syncram.address_a[] = ram_address_a[];
	fifo_altera_syncram.address_b[] = ram_address_b[];
	fifo_altera_syncram.addressstall_b = (! valid_rdreq);
	fifo_altera_syncram.clock0 = wrclk;
	fifo_altera_syncram.clock1 = rdclk;
	fifo_altera_syncram.data_a[] = data[];
	fifo_altera_syncram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = wraclr.q[];
	delayed_wrptr_g[].d = wrptr_g[].q;
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = rdaclr.q[];
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrptr_g[].clk = wrclk;
	wrptr_g[].clrn = wraclr.q[];
	wrptr_g[].d = wrptr_g1p.q[];
	wrptr_g[].ena = valid_wrreq;
	rdaclr.clock = rdclk;
	rdaclr.clrn = (! aclr);
	rdaclr.d[] = B"1";
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = rdaclr.q[];
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	wraclr.clock = wrclk;
	wraclr.clrn = (! aclr);
	wraclr.d[] = B"1";
	ws_brp.clock = wrclk;
	ws_brp.clrn = wraclr.q[];
	ws_brp.d[] = ws_dgrp_gray2bin.bin[];
	ws_bwp.clock = wrclk;
	ws_bwp.clrn = wraclr.q[];
	ws_bwp.d[] = wrptr_g_gray2bin.bin[];
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = wraclr.q[];
	ws_dgrp.d[] = rdptr_g[].q;
	wrusedw_sub_result[] = wrusedw_sub_dataa[] - wrusedw_sub_datab[];
	wrusedw_sub_dataa[] = ws_bwp.q[];
	wrusedw_sub_datab[] = ws_brp.q[];
	rdempty_eq_comp.dataa[] = rs_dgwp.q[];
	rdempty_eq_comp.datab[] = rdptr_g[].q;
	wrempty_eq_comp.dataa[] = ws_dgrp.q[];
	wrempty_eq_comp.datab[] = wrptr_g[].q;
	wrfull_eq_comp.dataa[] = ws_dgrp.q[];
	wrfull_eq_comp.datab[] = wrptr_gs[];
	int_rdempty = rdempty_eq_comp.aeb;
	int_wrfull = wrfull_eq_comp.aeb;
	q[] = fifo_altera_syncram.q_b[];
	ram_address_a[] = ( (wrptr_g[6..6].q $ wrptr_g[5..5].q), wrptr_g[4..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[6..6] $ rdptr_g1p.q[5..5]), rdptr_g1p.q[4..0]);
	rdempty = int_rdempty;
	valid_rdreq = (rdreq & rdaclr.q[]);
	valid_wrreq = (wrreq & wraclr.q[]);
	wrempty = wrempty_eq_comp.aeb;
	wrfull = (int_wrfull # (! wraclr.q[]));
	wrptr_gs[] = ( (! wrptr_g[6..6].q), (! wrptr_g[5..5].q), wrptr_g[4..0].q);
	wrusedw[] = ( wrusedw_sub_result[5..0]);
END;
--VALID FILE
